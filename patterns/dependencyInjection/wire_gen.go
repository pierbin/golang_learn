// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"learnGo/patterns/dependencyInjection/foobarbaz"
	"learnGo/patterns/dependencyInjection/greeter"
	"learnGo/patterns/dependencyInjection/shapes"
)

// Injectors from wire.go:

func InitializeEvent(phrase string) (greeter.Event, error) {
	event, err := greeter.ProvideEvent(phrase)
	if err != nil {
		return greeter.Event{}, err
	}
	return event, nil
}

func InitializeBaz(ctx context.Context) (foobarbaz.Baz, error) {
	foo := foobarbaz.ProvideFoo()
	bar := foobarbaz.ProvideBar(foo)
	baz, err := foobarbaz.ProvideBaz(bar)
	if err != nil {
		return foobarbaz.Baz{}, err
	}
	return baz, nil
}

func ProvideShape() float64 {
	square := shapes.ProvideSquare()
	float64_2 := shapes.ProvideArea(square)
	return float64_2
}
